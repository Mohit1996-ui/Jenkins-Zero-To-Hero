pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1' // Your Docker image
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // Mount Docker socket
        }
    }
    stages {
        stage('Checkout') {
            steps {
                sh 'echo passed'
                // Uncomment this line for actual checkout if needed
                // git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
            }
        }
        stage('Build and Test') {
            steps {
                sh 'ls -ltr'
                // Build the project and create a JAR file
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
            }
        }
        stage('Static Code Analysis') {
            environment {
                SONAR_URL = "http://13.234.213.90:9000"
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
                }
            }
        }
        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "mohit290996/ultimate-cicd:${BUILD_NUMBER}" // Updated to your Docker image
                REGISTRY_CREDENTIALS = credentials('docker-cred')
            }
            steps {
                script {
                    sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
                GIT_USER_NAME = "Mohit1996-ui"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    script {
                        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests') {
                            // Set Git user info
                            sh 'git config user.email "abhishek.xyz@gmail.com"'
                            sh 'git config user.name "Abhishek Veeramalla"'
                            
                            // Replace the entire image line in deployment.yml
                            sh '''
                                BUILD_NUMBER=${BUILD_NUMBER}
                                sed -i "s|^.*image:.*|        image: mohit290996/ultimate-cicd:${BUILD_NUMBER}|g" deployment.yml
                                git add deployment.yml
                                git status
                                git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
                                git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
